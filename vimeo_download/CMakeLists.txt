cmake_minimum_required(VERSION 3.5)
project(download_vimeo)
add_executable(download_vimeo main.cpp)

set(CMAKE_CXX_COMPILER clang++)
if(WIN32)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++latest")
set(CMAKE_SYSTEM_PROCESSOR x64)
endif()
if(UNIX)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++2a")
add_definitions(-Wall -Wextra -O2)
endif()

add_subdirectory(src)

target_link_libraries(download_vimeo vimeocore)
set(Boost_USE_STATIC_LIBS ON)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
if(UNIX)
set(Boost_INCLUDE_DIRS -lboost_program_options)
endif()
if(UNIX AND NOT APPLE)
    set(LINUX TRUE)
endif()
if(WIN32)
set(CMAKE_TOOLCHAIN_FILE ${_VCPKG_INSTALLED_DIR}"/scripts/buildsystems/vcpkg.cmake")
include_directories(${_VCPKG_INSTALLED_DIR}\installed\x64-windows-static\include)
endif()
if(LINUX)
target_link_libraries(download_vimeo ${Boost_PROGRAM_OPTIONS_LIBRARY})
include_directories(/usr/local/include/)
target_link_libraries(download_vimeo -lboost_program_options -lcurl -pthread)
elseif(APPLE)
find_package(Boost REQUIRED program_options)
include_directories(${Boost_INCLUDE_DIRS})
target_link_libraries(download_vimeo ${Boost_LIBRARIES} -lcurl)
endif()
